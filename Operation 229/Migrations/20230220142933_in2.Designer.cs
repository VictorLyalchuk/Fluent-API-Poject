// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Operation_229;

namespace Operation_229.Migrations
{
    [DbContext(typeof(AirplanesDBContext))]
    [Migration("20230220142933_in2")]
    partial class in2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientFlight", b =>
                {
                    b.Property<int>("clientsID")
                        .HasColumnType("int");

                    b.Property<int>("flightsID")
                        .HasColumnType("int");

                    b.HasKey("clientsID", "flightsID");

                    b.HasIndex("flightsID");

                    b.ToTable("ClientFlight");
                });

            modelBuilder.Entity("Operation_229.Entities.Airplane", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxPassangers")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            MaxPassangers = 700,
                            Model = "Boeing 747"
                        },
                        new
                        {
                            ID = 2,
                            MaxPassangers = 750,
                            Model = "Boeing A320"
                        });
                });

            modelBuilder.Entity("Operation_229.Entities.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.HasKey("ID");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Operation_229.Entities.Flight", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirplaneID")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AirplaneID");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AirplaneID = 1,
                            ArrivalCity = "London",
                            ArrivalTime = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "New York",
                            DepartureTime = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            AirplaneID = 2,
                            ArrivalCity = "London",
                            ArrivalTime = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Amsterdam",
                            DepartureTime = new DateTime(2023, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ClientFlight", b =>
                {
                    b.HasOne("Operation_229.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("clientsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Operation_229.Entities.Flight", null)
                        .WithMany()
                        .HasForeignKey("flightsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Operation_229.Entities.Flight", b =>
                {
                    b.HasOne("Operation_229.Entities.Airplane", "airplanes")
                        .WithMany("flights")
                        .HasForeignKey("AirplaneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("airplanes");
                });

            modelBuilder.Entity("Operation_229.Entities.Airplane", b =>
                {
                    b.Navigation("flights");
                });
#pragma warning restore 612, 618
        }
    }
}
